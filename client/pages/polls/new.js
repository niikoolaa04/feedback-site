import { useState, useEffect, useRef, useContext } from 'react'
import Head from 'next/head'
import { useRouter } from 'next/router'
import Navigation from '../../components/Navigation/Navigation'
import Footer from '../../components/Other/Footer'
import ChoicesCreate from '../../components/Poll/ChoicesCreate'
import { createPoll, successBar, errorBar, getProfile } from '../../utils/utils'
import { UserContext } from '../../contexts/UserContext'
import '../../styles/Polls.module.css'

export default function NewPoll() {
  const currUser = useContext(UserContext)?.user;
  const router = useRouter();
  const [answers, setAnswers] = useState([{
    id: 1,
    text: ''
  }]);
  const inputRef = useRef([]);
  const titleRef = useRef("");
  const descriptionRef = useRef("");
  const checksRef = useRef([]);
  const [author, setAuthor] = useState("");

  const removeItem = async(index) => {
    if(index == 0 && answers.length == 1) return errorBar("You can't remove the only choice.");
    let inputArr = inputRef.current.map((x, ind) => {
      return {
        id: ind,
        text: x?.value
      }
    }).filter(val => val.text != undefined);
    inputArr.splice(index, 1);
    setAnswers([...inputArr])
  }

  async function getUserProfile() {
    if(currUser.id) {
      await getProfile(currUser.id).then((res) => {
        if(res?.id) setAuthor(currUser.id);
      });
    } else {
      setAuthor("-1");
    }
  }

  useEffect(() => {
    getUserProfile();
  }, []);

  const submitNewPoll = async(e) => {
    e.preventDefault();
    let details = {
      user: author,
      title: titleRef.current.value,
      question: descriptionRef.current.value,
      options: inputRef.current.map((v) => v.value)
    }

    await createPoll(details).then((result) => {
      if(result.code == 201) {
        successBar("Poll have been created, redirecting.");
        setTimeout(() => router.push(`/polls/${result.response.id}`), 3000);
        return;
      }
    });
  }

  return (
    <div className='hideOverflow'>
      <Navigation active='polls' />
      <Head>
        <title>Feedback App - Create Poll</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <div className="bg-maindark">
          <form className="container py-6" onSubmit={(async(e) => await submitNewPoll(e))}>
            <div className="row d-flex justify-content-center">
              <div className="bg-bluedark shadow w-100 w-md-75 rounded-1">
                {/* FORMS */}
                <div className='px-md-5'>
                  <div className='mb-3'>
                    <div className="titleSection pt-4">
                      <p className='text-light fs-3 fw-bold mb-0'>Details</p>
                      <p className='text-gray600'>Set general Poll details like Title, Description and similar.</p>
                    </div>
                    <div className="mb-2">
                      <label htmlFor="pollTitle" className="form-label text-light">Poll Title</label>
                      <input type="text" ref={titleRef} className="form-control border-secdark bg-secdark text-light" placeholder="Title of Poll" id="pollTitle" />
                    </div>
                    <div className="mb-2">
                      <label htmlFor="pollQuestion" className="form-label text-light">Poll Question</label>
                      <textarea className="form-control border-secdark bg-secdark text-light" placeholder="Question for your Poll" ref={descriptionRef} id="pollQuestion" style={{ height: "8rem", resize: "none" }} />
                    </div>
                    <div className="mt-3">
                      <p className='text-light mb-2'>List of Choices</p>
                      <ChoicesCreate removeItem={removeItem} answers={answers} inputRef={inputRef} className="mb-4" />
                      <div className='border-secdark bg-secdark text-light py-1 mt-4 text-center rounded-1 hoverEffect cursor' onClick={(() => setAnswers([...answers, '']))}>âž•</div>
                    </div>
                  </div>
                </div>
                {/* OPTIONS */}
                <div className="px-5 mb-3 pt-3">
                  <div>
                    <p className='fs-3 text-light fw-bold mb-0'>Options</p>
                    <p className='text-gray600'>Set advanced poll details.</p>
                  </div>
                  {/* CHECKMARKS */}
                  <div className='mb-5'>
                    <div className="form-check">
                      <input className="form-check-input" ref={((el) => (checksRef.current["results"] == el))} type="checkbox" value="" id="checkResults" />
                      <label className="form-check-label text-light" htmlFor="checkResults">Allow everyone to see results?</label>
                    </div>
                    <div className="form-check">
                      <input className="form-check-input" ref={((el) => (checksRef.current["auth"] == el))} type="checkbox" value="" id="checkAuth" />
                      <label className="form-check-label text-light" htmlFor="checkAuth">Does Voters need to be Registered?</label>
                    </div>
                    <div className="">
                      <input className="m-0 p-0 border-0 bg-secdark quantity" style={{ "width": "50px", "outline": "none" }} ref={((el) => (checksRef.current["limit"] == el))} type="number" id="limitNumber" />
                      <label className="form-check-label text-light ps-2" htmlFor="limitNumber">How much users can Vote?</label>
                    </div>
                  </div>
                </div>
                <div className="d-flex justify-content-center pb-3">
                  <div className='bg-gray700' style={{ width: "30rem", height: "1px" }} />
                </div>
                <div className='px-5 py-3 pb-4 text-center'>
                  <button type='submit' className="btn btn-primary btn-lg me-2">Finish</button>
                  <button onClick={(() => console.log('cancel'))} className="btn btn-danger btn-lg ms-2">Cancel</button>
                </div>
              </div>
            </div>
          </form>
        </div>
      </div>
      <Footer />
    </div>
  )
}
