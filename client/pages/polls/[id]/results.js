import { useState, useEffect, useContext } from 'react'
import Head from 'next/head'
import { useRouter } from 'next/router'
import Navigation from '../../../components/Navigation/Navigation'
import Footer from '../../../components/Other/Footer'
import ChoicesCreate from '../../../components/Poll/ChoicesCreate'
import { UserContext } from '../../../contexts/UserContext'
import { getPoll } from '../../../utils/utils'
import { Pie } from 'react-chartjs-2'
import 'chart.js/auto';

export default function NewPoll() {
  const currUser = useContext(UserContext)?.user;
  const router = useRouter();
  const {id } = router.query;

  const [poll, setPoll] = useState({});
  const [userProfile, setUserProfile] = useState({});
  const [pollVotes, setPollVotes] = useState([]);

  useEffect(() => {
    if(!router.isReady) return;
    async function fetchPoll() {
      await getPoll(id).then(async(result) => {
        if(!result) {
          router.push("/");
          errorBar("Poll with such ID doesn't exist.");
          return;
        }
        setPollVotes({
          labels: result?.options?.map((v) => v),
          datasets: [
            {
              label: "Poll results",
              data: result?.submitters?.map((v, i) => {
                return result?.options[v?.vote];
              }),
              backgroundColor: [
                "#ffbb11",
                "#ecf0f1",
                "#50AF95",
                "#f3ba2f",
                "#2a71d0"
              ]
            }
          ]
        });
        console.log(pollVotes)
        console.log(result?.submitters?.map((v, i) => {
          return result?.options[v?.vote];
        }))
        console.log(result?.options?.map((v) => v))
        setPoll(result);
        if(result?.user == "-1" || !result?.user) {
          setUserProfile({
            id: -1,
            username: "N/A"
          });
        } else {
          await getProfile(result?.user).then((res) => {
            if(res?.user) setUserProfile(res);
          });
        }
      })
    }
    fetchPoll();
  }, [router.isReady]);

  return (
    <div className='hideOverflow'>
      <Navigation active='polls' />
      <Head>
        <title>Feedback App - Poll Results</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <div className="bg-maindark">
          <div className="container py-6">
            <div className="row d-flex justify-content-center">
              <div className="bg-bluedark shadow w-100 w-md-75 rounded-1">
                {/* FORMS */}
                <div className='px-md-5'>
                  <div className='mb-3'>
                  {/* <Pie
                      data={pollVotes}
                    /> */}
                  </div>
                </div>
                <div className="d-flex justify-content-center pb-3">
                  <div className='bg-gray700' style={{ width: "30rem", height: "1px" }} />
                </div>
                <div className='px-5 py-3 pb-4 text-center'>
                  <button type='submit' className="btn btn-primary btn-lg me-2">Finish</button>
                  <button onClick={(() => router.push("/"))} className="btn btn-danger btn-lg ms-2">Cancel</button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <Footer />
    </div>
  )
}
